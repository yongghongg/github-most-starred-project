{"version":3,"sources":["component/Header.js","component/GroupTitle.js","component/Filter.js","component/Repo.js","component/PageLoader.js","Feed.js","App.js","index.js"],"names":["Header","display","justifyContent","alignItems","mt","mb","fontSize","isInline","spacing","leftIcon","colorScheme","as","href","target","_hover","bg","GroupTitle","startDate","endDate","startMoment","moment","endMoment","fontWeight","fromNow","color","ml","format","Filter","props","viewType","onViewChange","period","onPeriodChange","language","onLanguageChange","useEffect","value","onChange","e","Languages","map","label","textAlign","Button","borderWidth","px","w","Calendar","onClick","rounded","FaTable","h","roundedRight","FaList","Repo","isListView","repo","console","log","p","borderRadius","flex","flexDir","owner","html_url","src","avatar_url","login","name","created_at","description","cursor","variant","iconSpacing","textDecor","stargazers_count","forks_count","open_issues_count","PageLoader","position","top","bottom","left","right","zIndex","thickness","Feed","useFetch","loading","get","useState","setViewType","setPeriod","setLanguage","setStartDate","subtract","setEndDate","repos","setRepos","filters","q","sort","order","modifyFilters","filtersQuery","URLSearchParams","toString","then","res","items","maxWidth","mx","length","repoGroup","counter","groupTitle","columns","repoItems","my","isLoading","App","width","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.41413476.chunk.js","sourcesContent":["import React from 'react'\nimport {FaGithub, FaTwitter} from \"react-icons/fa\";\nimport { Box, Button, Stack, Text } from '@chakra-ui/react';\n\nexport default function Header() {\n    return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt=\"25px\" mb=\"25px\">\n        <Box>\n            <Box><Text fontSize=\"2xl\">Most Starred GitHub Repo</Text></Box>\n        </Box>\n        <Stack isInline spacing=\"20px\">\n            <Button leftIcon={<FaGithub />} colorScheme=\"teal\" as=\"a\" href=\"https://github.com/yongghongg/github-most-starred-project\" target=\"_blank\" _hover={{bg:\"gray.900\"}}>View Source</Button>\n        </Stack>\n    </Box>\n    )\n}\n","import React from 'react';\nimport {Text} from \"@chakra-ui/react\";\nimport moment from \"moment\";\n\nexport default function GroupTitle( {startDate, endDate} ) {\n    if (!startDate || !endDate) {return null;}\n    const startMoment = moment(startDate);\n    const endMoment = moment(endDate);\n\n    return (\n        <Text fontSize=\"24px\" fontWeight={700}> {startMoment.fromNow()}{\" \"} \n        <Text fontSize=\"15px\" fontWeight={500} color=\"gray.500\" ml=\"5px\" as=\"span\"> {startMoment.format(\"MMMM D, YYYY\")}-{endMoment.format(\"MMMM D, YYYY\")} </Text>\n        </Text>\n    )\n}\n","import { \n    Select,   \n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Button,\n    Stack} from '@chakra-ui/react';\nimport {CalendarIcon} from \"@chakra-ui/icons\";\nimport React, { useEffect } from 'react';\nimport Languages from \"../data/Languages\";\nimport { FaList, FaTable } from 'react-icons/fa';\n\n\nexport default function Filter(props) {\n    const { viewType, onViewChange, period, onPeriodChange, language, onLanguageChange } = props;\n    \n    useEffect(() => {\n        onViewChange(viewType);\n    }, [viewType]);\n\n    return (\n        <Stack isInline mt={['15px', '15px', '15px', '0px']} mb='15px'>\n            <Select value={language} onChange={(e) => onLanguageChange(e.target.value)}>\n                {Languages.map((language) => (\n                    <option key={language.value} value={language.value}>{language.label}</option>\n                ))}\n            </Select>\n            <Menu>\n                <MenuButton \n                    textAlign=\"left\" \n                    as={Button} \n                    bg=\"white\" \n                    borderWidth={1} \n                    px=\"30px\" \n                    w=\"250px\"\n                    fontWeight={400} \n                    leftIcon={<CalendarIcon />}\n                    justifyContent=\"flex-start\">\n                    {period}\n                </MenuButton>\n                <MenuList>\n                    <MenuItem onClick={() => onPeriodChange('day')}>Daily</MenuItem>\n                    <MenuItem onClick={() => onPeriodChange('week')}>Weekly</MenuItem>\n                    <MenuItem onClick={() => onPeriodChange('month')}>Monthly</MenuItem>\n                    <MenuItem onClick={() => onPeriodChange('year')}>Yearly</MenuItem>\n                </MenuList>\n            </Menu>\n            <Stack isInline spacing={0} borderWidth={1} bg=\"white\" rounded=\"5px\" alignItems=\"center\" ml=\"10px\">\n                    <Button \n                        leftIcon={FaTable} \n                        h=\"100%\" \n                        fontWeight={400} \n                        roundedRight={0} \n                        onClick={() => {onViewChange('grid')}}\n                        bg={viewType==='grid' ? 'gray.200' : 'white'}\n                        >Grid</Button>\n                    <Button \n                        leftIcon={FaList} \n                        h=\"100%\" \n                        fontWeight={400}\n                        roundedRight={0} \n                        onClick={() => {onViewChange('list')}}\n                        bg={viewType==='list' ? 'gray.200' : 'white'}\n                        >List</Button>\n            </Stack>\n        </Stack>\n    )\n}\n","import { Box, Button, Flex, Heading, Image, Link, Stack, Text } from '@chakra-ui/react';\nimport { GoIssueOpened, GoRepoForked, GoStar } from \"react-icons/go\";\nimport moment from \"moment\";\nimport React from 'react'\n\nexport default function Repo(props) {\n    const { isListView = false, repo } = props;\n    console.log(repo);\n    return (\n        <Flex borderWidth={1} bg='white' p='15px' borderRadius=\"5px\" alignItems=\"flex-start\">\n            <Flex flex={1} flexDir=\"column\">\n            {!isListView && (\n                <Flex mb=\"15px\" as=\"a\" href={repo.owner.html_url} target=\"_blank\">\n                    <Image src={repo.owner.avatar_url} w=\"35px\" h=\"35px\" rounded=\"5px\" />\n                    <Box ml=\"10px\">\n                        <Heading fontSize=\"15px\">{repo.owner.login}</Heading>\n                        <Text fontSize=\"12px\">View profile</Text>\n                    </Box>\n                </Flex>\n            )}\n                <Box mb=\"15px\" flex={1}>\n                    <Box mb=\"10px\">\n                        <Heading fontSize=\"20px\" as=\"a\" href={repo.html_url} target=\"_blank\" color=\"purple.700\">{repo.name}</Heading>\n                        <Text fontSize=\"15px\" color=\"gray.600\">Built by &middot; <Link href={repo.owner.html_url} fontWeight={600} target=\"_blank\">{repo.owner.login}</Link>&middot; {moment(repo.created_at).format(\"MMMM D\")} </Text>\n                    </Box>\n                    <Text fontSize=\"15px\" color=\"gray.900\">{repo.description}</Text>\n                </Box>\n                <Stack isInline spacing=\"10px\">\n                    <Button as=\"a\" cursor=\"pointer\" leftIcon={<GoStar />} variant=\"link\" fontSize=\"14px\" iconSpacing=\"4px\" _hover={{textDecor: 'none'}}>{repo.stargazers_count}</Button>\n                    <Button as=\"a\" cursor=\"pointer\" leftIcon={<GoRepoForked />} variant=\"link\" fontSize=\"14px\" iconSpacing=\"4px\" _hover={{textDecor: 'none'}}>{repo.forks_count}</Button>\n                    <Button as=\"a\" cursor=\"pointer\" leftIcon={<GoIssueOpened />} variant=\"link\" fontSize=\"14px\" iconSpacing=\"4px\" _hover={{textDecor: 'none'}}>{repo.open_issues_count}</Button>\n                </Stack>\n            </Flex>\n            {isListView && (\n                <Image src={repo.owner.avatar_url} w=\"105px\" h=\"105px\" rounded=\"100%\" />\n            )}\n        </Flex>\n    )\n}\n","import { Flex, Spinner } from '@chakra-ui/react'\nimport React from 'react'\n\nexport default function PageLoader() {\n    return (\n        <Flex \n            position=\"fixed\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            top={0}\n            bottom={0}\n            left={0}\n            right={0}\n            bg=\"white\"\n            zIndex={999}\n        >\n            <Spinner thickness=\"5px\" color=\"gray.400\"/>\n        </Flex>\n    )\n}\n","import { Box, Button, Flex, SimpleGrid } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport Header from \"./component/Header\";\nimport GroupTitle from \"./component/GroupTitle\";\nimport Filter from './component/Filter';\nimport Repo from './component/Repo';\nimport moment from 'moment';\nimport useFetch from 'use-http';\nimport PageLoader from './component/PageLoader';\n\nfunction modifyFilters({ startDate, endDate, language }) {\n    const languageQuery = language ? `language:${language} ` : \"\";\n    const dateQuery = `created:${startDate}..${endDate}`;\n    return {\n        q: languageQuery + dateQuery,\n        sort: \"stars\",\n        order: \"desc\"\n    }\n}\n\nexport default function Feed() {\n\n    const { loading, get } = useFetch(\"https://api.github.com\");\n    \n    const [viewType, setViewType] = useState('grid');\n    const [period, setPeriod] = useState('day');\n    const [language, setLanguage] = useState();\n\n    const [startDate, setStartDate] = useState(\"\")\n    const [endDate, setEndDate] = useState(moment().subtract(1,'day').format());\n\n    const [repos, setRepos] = useState([]);\n\n    useEffect(() => {\n        const endDate = moment().subtract(1, 'day').format();\n        const startDate = moment(endDate).subtract(1, period).format();\n        setEndDate(endDate);\n        setStartDate(startDate);\n        setRepos([]);\n    }, [period, language]);\n\n    useEffect(() => {\n        if (!startDate) { return; }\n        const filters = modifyFilters({ language, startDate, endDate });\n        const filtersQuery = new URLSearchParams(filters).toString();\n        \n        get(`/search/repositories?${filtersQuery}`).then((res) => {\n            setRepos([\n                ...repos,\n                {\n                    startDate,\n                    endDate,\n                    items: res.items\n                }\n            ])\n        });\n    }, [startDate]);\n\n    return (\n        <Box maxWidth=\"1200px\" mx=\"auto\">\n            <Header />\n            {repos.length === 0 && loading && <PageLoader />}\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <GroupTitle \n                startDate={repos?.[0]?.startDate}\n                endDate={repos?.[0]?.endDate}\n            />\n            <Filter \n                viewType={viewType}\n                onViewChange={setViewType}\n                period={period}\n                onPeriodChange={setPeriod}\n                language={language}\n                onLanguageChange={setLanguage}\n                />\n            </Flex>\n            \n            {repos.map((repoGroup, counter) => {\n                const groupTitle = counter > 0 && (\n                    <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"25px\" mb=\"15px\">\n                        <GroupTitle \n                            startDate={repoGroup.startDate}\n                            endDate={repoGroup.endDate}\n                        />\n                    </Flex>\n                );\n                return (\n                    <Box>\n                        {groupTitle}\n                        <SimpleGrid columns={viewType === \"list\" ? 1 : [1, 1, 2, 3, 3]} spacing=\"15px\">\n                            {repoGroup.items.map((repoItems) => (\n                                <Repo isListView={viewType==='list'} repo={repoItems} />\n                            ))}\n                        </SimpleGrid>\n                    </Box>\n                );\n            })}\n            \n            <Flex alignItems=\"center\" justifyContent=\"center\" my=\"20px\" mb=\"20px\">\n                <Button \n                isLoading={loading}\n                onClick={() => {\n                    setEndDate(startDate);\n                    setStartDate(moment(startDate).subtract(1, period).format());\n                }} \n                colorScheme=\"blue\">Load Next Group</Button>\n            </Flex>\n        </Box>\n    )\n}\n","import { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Feed from \"./Feed\";\n\nexport default function App() {\n    return (\n        <Box width=\"100vw\" minHeight=\"100vh\">\n            <Feed />\n        </Box>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ChakraProvider>\n      <CSSReset />\n      <App />\n    </ChakraProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}