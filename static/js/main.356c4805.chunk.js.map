{"version":3,"sources":["component/Header.js","component/GroupTitle.js","component/Filter.js","component/Repo.js","component/PageLoader.js","Feed.js","App.js","index.js"],"names":["Header","display","justifyContent","alignItems","mt","mb","isInline","spacing","leftIcon","colorScheme","GroupTitle","startDate","endDate","startMoment","moment","endMoment","fontSize","fontWeight","fromNow","color","ml","as","format","Filter","props","viewType","onViewChange","period","onPeriodChange","language","onLanguageChange","useEffect","value","onChange","e","target","Languages","map","label","textAlign","Button","bg","borderWidth","px","w","Calendar","onClick","rounded","FaTable","h","roundedRight","FaList","Repo","isListView","repo","console","log","p","borderRadius","flex","flexDir","href","owner","html_url","src","avatar_url","login","name","created_at","description","cursor","variant","iconSpacing","_hover","textDecor","stargazers_count","forks_count","open_issues_count","PageLoader","position","top","bottom","left","right","zIndex","thickness","Feed","useFetch","loading","get","useState","setViewType","setPeriod","setLanguage","setStartDate","subtract","setEndDate","repos","setRepos","filters","q","sort","order","modifyFilters","filtersQuery","URLSearchParams","toString","then","res","items","maxWidth","mx","length","repoGroup","counter","groupTitle","columns","repoItems","my","isLoading","App","width","minHeight","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.356c4805.chunk.js","sourcesContent":["import React from 'react'\nimport {FaGithub, FaTwitter} from \"react-icons/fa\";\nimport { Box, Button, Stack } from '@chakra-ui/react';\n\nexport default function Header() {\n    return (\n    <Box display=\"flex\" justifyContent=\"space-between\" alignItems=\"center\" mt=\"25px\" mb=\"25px\">\n        <Box>\n            <Box>Most Starred GitHub Repo</Box>\n        </Box>\n        <Stack isInline spacing=\"20px\">\n            <Button leftIcon={<FaGithub />} colorScheme=\"teal\">View Source</Button>\n            <Button leftIcon={<FaTwitter />} colorScheme=\"blue\">Tweet</Button>\n        </Stack>\n    </Box>\n    )\n}\n","import React from 'react';\nimport {Text} from \"@chakra-ui/react\";\nimport moment from \"moment\";\n\nexport default function GroupTitle( {startDate, endDate} ) {\n    if (!startDate || !endDate) {return null;}\n    const startMoment = moment(startDate);\n    const endMoment = moment(endDate);\n\n    return (\n        <Text fontSize=\"24px\" fontWeight={700}> {startMoment.fromNow()}{\" \"} \n        <Text fontSize=\"15px\" fontWeight={500} color=\"gray.500\" ml=\"5px\" as=\"span\"> {startMoment.format(\"MMMM D, YYYY\")}-{endMoment.format(\"MMMM D, YYYY\")} </Text>\n        </Text>\n    )\n}\n","import { \n    Select,   \n    Menu,\n    MenuButton,\n    MenuList,\n    MenuItem,\n    Button,\n    Stack} from '@chakra-ui/react';\nimport {CalendarIcon} from \"@chakra-ui/icons\";\nimport React, { useEffect } from 'react';\nimport Languages from \"../data/Languages\";\nimport { FaList, FaTable } from 'react-icons/fa';\n\n\nexport default function Filter(props) {\n    const { viewType, onViewChange, period, onPeriodChange, language, onLanguageChange } = props;\n    \n    useEffect(() => {\n        onViewChange(viewType);\n    }, [viewType]);\n\n    return (\n        <Stack isInline mt={['15px', '15px', '15px', '0px']} mb='15px'>\n            <Select value={language} onChange={(e) => onLanguageChange(e.target.value)}>\n                {Languages.map((language) => (\n                    <option key={language.value} value={language.value}>{language.label}</option>\n                ))}\n            </Select>\n            <Menu>\n                <MenuButton \n                    textAlign=\"left\" \n                    as={Button} \n                    bg=\"white\" \n                    borderWidth={1} \n                    px=\"30px\" \n                    w=\"250px\"\n                    fontWeight={400} \n                    leftIcon={<CalendarIcon />}\n                    justifyContent=\"flex-start\">\n                    {period}\n                </MenuButton>\n                <MenuList>\n                    <MenuItem onClick={() => onPeriodChange('day')}>Daily</MenuItem>\n                    <MenuItem onClick={() => onPeriodChange('week')}>Weekly</MenuItem>\n                    <MenuItem onClick={() => onPeriodChange('month')}>Monthly</MenuItem>\n                    <MenuItem onClick={() => onPeriodChange('year')}>Yearly</MenuItem>\n                </MenuList>\n            </Menu>\n            <Stack isInline spacing={0} borderWidth={1} bg=\"white\" rounded=\"5px\" alignItems=\"center\" ml=\"10px\">\n                    <Button \n                        leftIcon={FaTable} \n                        h=\"100%\" \n                        fontWeight={400} \n                        roundedRight={0} \n                        onClick={() => {onViewChange('grid')}}\n                        bg={viewType==='grid' ? 'gray.200' : 'white'}\n                        >Grid</Button>\n                    <Button \n                        leftIcon={FaList} \n                        h=\"100%\" \n                        fontWeight={400}\n                        roundedRight={0} \n                        onClick={() => {onViewChange('list')}}\n                        bg={viewType==='list' ? 'gray.200' : 'white'}\n                        >List</Button>\n            </Stack>\n        </Stack>\n    )\n}\n","import { Box, Button, Flex, Heading, Image, Link, Stack, Text } from '@chakra-ui/react';\nimport { GoIssueOpened, GoRepoForked, GoStar } from \"react-icons/go\";\nimport moment from \"moment\";\nimport React from 'react'\n\nexport default function Repo(props) {\n    const { isListView = false, repo } = props;\n    console.log(repo);\n    return (\n        <Flex borderWidth={1} bg='white' p='15px' borderRadius=\"5px\" alignItems=\"flex-start\">\n            <Flex flex={1} flexDir=\"column\">\n            {!isListView && (\n                <Flex mb=\"15px\" as=\"a\" href={repo.owner.html_url} target=\"_blank\">\n                    <Image src={repo.owner.avatar_url} w=\"35px\" h=\"35px\" rounded=\"5px\" />\n                    <Box ml=\"10px\">\n                        <Heading fontSize=\"15px\">{repo.owner.login}</Heading>\n                        <Text fontSize=\"12px\">View profile</Text>\n                    </Box>\n                </Flex>\n            )}\n                <Box mb=\"15px\" flex={1}>\n                    <Box mb=\"10px\">\n                        <Heading fontSize=\"20px\" as=\"a\" href={repo.html_url} target=\"_blank\" color=\"purple.700\">{repo.name}</Heading>\n                        <Text fontSize=\"15px\" color=\"gray.600\">Built by &middot; <Link href={repo.owner.html_url} fontWeight={600} target=\"_blank\">{repo.owner.login}</Link>&middot; {moment(repo.created_at).format(\"MMMM D\")} </Text>\n                    </Box>\n                    <Text fontSize=\"15px\" color=\"gray.900\">{repo.description}</Text>\n                </Box>\n                <Stack isInline spacing=\"10px\">\n                    <Button as=\"a\" cursor=\"pointer\" leftIcon={<GoStar />} variant=\"link\" fontSize=\"14px\" iconSpacing=\"4px\" _hover={{textDecor: 'none'}}>{repo.stargazers_count}</Button>\n                    <Button as=\"a\" cursor=\"pointer\" leftIcon={<GoRepoForked />} variant=\"link\" fontSize=\"14px\" iconSpacing=\"4px\" _hover={{textDecor: 'none'}}>{repo.forks_count}</Button>\n                    <Button as=\"a\" cursor=\"pointer\" leftIcon={<GoIssueOpened />} variant=\"link\" fontSize=\"14px\" iconSpacing=\"4px\" _hover={{textDecor: 'none'}}>{repo.open_issues_count}</Button>\n                </Stack>\n            </Flex>\n            {isListView && (\n                <Image src={repo.owner.avatar_url} w=\"105px\" h=\"105px\" rounded=\"100%\" />\n            )}\n        </Flex>\n    )\n}\n","import { Flex, Spinner } from '@chakra-ui/react'\nimport React from 'react'\n\nexport default function PageLoader() {\n    return (\n        <Flex \n            position=\"fixed\"\n            alignItems=\"center\"\n            justifyContent=\"center\"\n            top={0}\n            bottom={0}\n            left={0}\n            right={0}\n            bg=\"white\"\n            zIndex={999}\n        >\n            <Spinner thickness=\"5px\" color=\"gray.400\"/>\n        </Flex>\n    )\n}\n","import { Box, Button, Flex, SimpleGrid } from '@chakra-ui/react';\nimport React, { useEffect, useState } from 'react';\nimport Header from \"./component/Header\";\nimport GroupTitle from \"./component/GroupTitle\";\nimport Filter from './component/Filter';\nimport Repo from './component/Repo';\nimport moment from 'moment';\nimport useFetch from 'use-http';\nimport PageLoader from './component/PageLoader';\n\nfunction modifyFilters({ startDate, endDate, language }) {\n    const languageQuery = language ? `language:${language} ` : \"\";\n    const dateQuery = `created:${startDate}..${endDate}`;\n    return {\n        q: languageQuery + dateQuery,\n        sort: \"stars\",\n        order: \"desc\"\n    }\n}\n\nexport default function Feed() {\n\n    const { loading, get } = useFetch(\"https://api.github.com\");\n    \n    const [viewType, setViewType] = useState('grid');\n    const [period, setPeriod] = useState('day');\n    const [language, setLanguage] = useState();\n\n    const [startDate, setStartDate] = useState(\"\")\n    const [endDate, setEndDate] = useState(moment().subtract(1,'day').format());\n\n    const [repos, setRepos] = useState([]);\n\n    useEffect(() => {\n        const endDate = moment().subtract(1, 'day').format();\n        const startDate = moment(endDate).subtract(1, period).format();\n        setEndDate(endDate);\n        setStartDate(startDate);\n        setRepos([]);\n    }, [period, language]);\n\n    useEffect(() => {\n        if (!startDate) { return; }\n        const filters = modifyFilters({ language, startDate, endDate });\n        const filtersQuery = new URLSearchParams(filters).toString();\n        \n        get(`/search/repositories?${filtersQuery}`).then((res) => {\n            setRepos([\n                ...repos,\n                {\n                    startDate,\n                    endDate,\n                    items: res.items\n                }\n            ])\n        });\n    }, [startDate]);\n\n    return (\n        <Box maxWidth=\"1200px\" mx=\"auto\">\n            <Header />\n            {repos.length === 0 && loading && <PageLoader />}\n            <Flex alignItems=\"center\" justifyContent=\"space-between\">\n            <GroupTitle \n                startDate={repos?.[0]?.startDate}\n                endDate={repos?.[0]?.endDate}\n            />\n            <Filter \n                viewType={viewType}\n                onViewChange={setViewType}\n                period={period}\n                onPeriodChange={setPeriod}\n                language={language}\n                onLanguageChange={setLanguage}\n                />\n            </Flex>\n            \n            {repos.map((repoGroup, counter) => {\n                const groupTitle = counter > 0 && (\n                    <Flex alignItems=\"center\" justifyContent=\"center\" mt=\"25px\" mb=\"15px\">\n                        <GroupTitle \n                            startDate={repoGroup.startDate}\n                            endDate={repoGroup.endDate}\n                        />\n                    </Flex>\n                );\n                return (\n                    <Box>\n                        {groupTitle}\n                        <SimpleGrid columns={viewType === \"list\" ? 1 : [1, 1, 2, 3, 3]} spacing=\"15px\">\n                            {repoGroup.items.map((repoItems) => (\n                                <Repo isListView={viewType==='list'} repo={repoItems} />\n                            ))}\n                        </SimpleGrid>\n                    </Box>\n                );\n            })}\n            \n            <Flex alignItems=\"center\" justifyContent=\"center\" my=\"20px\" mb=\"20px\">\n                <Button \n                isLoading={loading}\n                onClick={() => {\n                    setEndDate(startDate);\n                    setStartDate(moment(startDate).subtract(1, period).format());\n                }} \n                colorScheme=\"blue\">Load Next Group</Button>\n            </Flex>\n        </Box>\n    )\n}\n","import { Box } from \"@chakra-ui/react\";\nimport React from \"react\";\nimport Feed from \"./Feed\";\n\nexport default function App() {\n    return (\n        <Box width=\"100vw\" minHeight=\"100vh\">\n            <Feed />\n        </Box>\n    )\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ChakraProvider, CSSReset } from '@chakra-ui/react';\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <ChakraProvider>\n      <CSSReset />\n      <App />\n    </ChakraProvider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}